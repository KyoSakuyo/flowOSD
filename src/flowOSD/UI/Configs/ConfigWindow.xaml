<Window
    x:Class="flowOSD.UI.Configs.ConfigWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:flowOSD.UI.Configs"
    xmlns:configs="using:flowOSD.Core.Configs"
    xmlns:controls="using:flowOSD.UI.Controls"
    xmlns:commands="using:flowOSD.UI.Commands"
    xmlns:converters="using:flowOSD.UI.Converters"
    xmlns:resources="using:flowOSD.Core.Resources"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="../Styles/CxToggleSwitch.xaml"/>
                    <ResourceDictionary>
                        <SolidColorBrush x:Key="NavigationViewContentBackground" Color="Transparent"/>
                        <SolidColorBrush x:Key="NavigationViewContentGridBorderBrush" Color="Transparent"/>
                        <Thickness x:Key="NavigationViewHeaderMargin">10,0,0,20</Thickness>

                        <Style x:Key="CxConfigBorderStyle" TargetType="Border">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}"/>
                            <Setter Property="Background" Value="{ThemeResource ControlFillColorDefaultBrush}"/>
                            <Setter Property="Margin" Value="10, 5"/>
                            <Setter Property="Padding" Value="20, 10, 10, 10"/>
                            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
                        </Style>

                        <Style x:Key="CxConfigExpanderStyle" TargetType="Expander" BasedOn="{StaticResource CxExpanderStyle}">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}"/>
                            <Setter Property="Background" Value="{ThemeResource ControlFillColorDefaultBrush}"/>
                            <Setter Property="Margin" Value="10, 5"/>
                            <Setter Property="Padding" Value="20, 10, 10, 10"/>
                            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        </Style>

                        <Style TargetType="controls:FanCurveTuner">
                            <Setter Property="CoordinateGridBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}"/>
                            <Setter Property="CoordinateGridLabelBrush" Value="{ThemeResource TextFillColorTertiaryBrush}"/>
                            <Setter Property="CoordinateGridThickness" Value="1"/>

                            <Setter Property="LineBrush" Value="{ThemeResource AccentFillColorTertiaryBrush}"/>
                            <Setter Property="DisabledLineBrush" Value="{ThemeResource ControlStrongStrokeColorDisabledBrush}"/>
                            <Setter Property="LineThickness" Value="2"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="controls:FanCurveTuner">
                                        <Grid Background="Transparent">
                                            <TextBlock 
                                                Text="{TemplateBinding Title}" 
                                                Margin="25, 10" 
                                                Opacity=".5" 
                                                FontSize="25" 
                                                Foreground="{ThemeResource ControlStrongStrokeColorDefaultBrush}"/>

                                            <Canvas
                                                Name="CANVAS_PART" 
                                                Margin="20, 10, 10, 20" 
                                                Background="Transparent">

                                                <Canvas.Resources>
                                                    <Style TargetType="Thumb">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Thumb">
                                                                    <Grid 
                                                                        ToolTipService.ToolTip="{TemplateBinding Tag}">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal" />

                                                                                <VisualState x:Name="Pressed">
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="ThumbHover.Opacity" Value=".2" />

                                                                                    </VisualState.Setters>
                                                                                </VisualState>

                                                                                <VisualState x:Name="Disabled">
                                                                                    <VisualState.Setters>
                                                                                    </VisualState.Setters>
                                                                                </VisualState>

                                                                                <VisualState x:Name="PointerOver">
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="ThumbHover.Opacity" Value=".5" />

                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>

                                                                        <Rectangle 
                                                                            x:Name="ThumbHover" 
                                                                            Opacity="0" 
                                                                            Width="20" 
                                                                            Height="20"
                                                                            RadiusX="10" 
                                                                            RadiusY="10"
                                                                            Fill="{TemplateBinding Background}"
                                                                            Stroke="{TemplateBinding Foreground}"/>


                                                                        <Rectangle 
                                                                            x:Name="ThumbVisual" 
                                                                            Width="10"
                                                                            Height="10" 
                                                                            RadiusX="5" 
                                                                            RadiusY="5"
                                                                            Fill="{TemplateBinding Background}"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Canvas.Resources>

                                            </Canvas>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
                        <converters:BooleanConverter x:Key="BooleanConverter"/>
                        <converters:TimeConverter x:Key="TimeConverter" ZeroValue="Auto"/>
                    </ResourceDictionary>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>

        <NavigationView 
            x:Name="navigationView"
            IsBackEnabled="False" 
            IsBackButtonVisible="Collapsed"
            IsSettingsVisible="False"
            PaneDisplayMode="Auto"
            AlwaysShowHeader="True"
            CompactModeThresholdWidth="450"
            ExpandedModeThresholdWidth="600"
            OpenPaneLength="200">

            <NavigationView.MenuItemTemplate>
                <DataTemplate x:DataType="local:ConfigViewModelBase">
                    <NavigationViewItem Content="{Binding Title}">
                        <NavigationViewItem.Icon>
                            <FontIcon 
                                FontFamily="{ThemeResource SymbolThemeFontFamily}" 
                                Glyph="{Binding Icon}"/>
                        </NavigationViewItem.Icon>
                        <NavigationViewItem.InfoBadge>
                            <InfoBadge 
                                Value="{Binding InfoCount}"
                                Visibility="{Binding InfoCount, Converter={StaticResource VisibilityConverter}}"/>
                        </NavigationViewItem.InfoBadge>
                    </NavigationViewItem>
                </DataTemplate>
            </NavigationView.MenuItemTemplate>

            <ScrollViewer>
                <ScrollViewer.Resources>
                    <ResourceDictionary>
                        <Style TargetType="FontIcon">
                            <Setter Property="Margin" Value="0,0,15,0"/>
                        </Style>
                    </ResourceDictionary>
                </ScrollViewer.Resources>

                <Grid>
                    <!-- General -->
                    <StackPanel
                        x:Name="generalConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <InfoBar
                            Margin="10, 5"
                            IsOpen="{Binding IsOptimizationInfoVisible}"
                            BorderBrush="{ThemeResource ControlElevationBorderBrush}"
                            Background="{ThemeResource ControlFillColorDefaultBrush}"
                            Severity="Informational"
                            Title="{Binding TextResources[Config.General.OptimizationTitle], Mode=OneTime}"
                            Message="{Binding TextResources[Config.General.OptimizationMessage], Mode=OneTime}" >
                            <InfoBar.ActionButton>
                                <HyperlinkButton NavigateUri="{Binding OptimizationPageUrl}" Content="{Binding TextResources[Config.General.OptimizationMore], Mode=OneTime}"/>
                            </InfoBar.ActionButton>
                        </InfoBar>

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.General.RunAtStartup], Mode=OneTime}"
                                IsOn="{Binding RunAtStartup, Mode=TwoWay}" />
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.General.ControlDisplayRefreshRate], Mode=OneTime}"
                                IsOn="{Binding ControlDisplayRefreshRate, Mode=TwoWay}" />
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.General.ConfirmGpuModeChange], Mode=OneTime}"
                                IsOn="{Binding ConfirmGpuModeChange, Mode=TwoWay}" />
                        </Border>
                        <Border 
                            Style="{StaticResource CxConfigBorderStyle}"
                            Visibility="{Binding VariBrightControlEnabled, Converter={StaticResource VisibilityConverter}}">
                            
                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.General.DisableVariBright], Mode=OneTime}"
                                IsOn="{Binding DisableVariBright, Mode=TwoWay}" />
                        </Border>
                        <Border 
                            Style="{StaticResource CxConfigBorderStyle}"
                            Visibility="{Binding BootSoundControlEnabled, Converter={StaticResource VisibilityConverter}}">

                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.General.BootSound], Mode=OneTime}"
                                IsOn="{Binding BootSound, Mode=TwoWay}" />
                        </Border>
                    </StackPanel>

                    <!-- Notifications -->
                    <StackPanel 
                        x:Name="notificationsConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding PerformanceMode, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.PerformanceMode], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.PerformanceMode], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding PowerMode, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.PowerMode], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.PowerMode], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding PowerSource, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.PowerSource], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.PowerSource], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding Boost, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.Boost], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.Boost], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding TouchPad, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.TouchPad], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.TouchPad], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding DisplayRefreshRate, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.DisplayRefreshRate], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.DisplayRefreshRate], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding Mic, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.Mic], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.Mic], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding Gpu, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.Gpu], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.Gpu], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding NotebookMode, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.NotebookMode], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.NotebookMode], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding AwakeMode, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Notifications.AwakeMode], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Notifications.AwakeMode], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                    </StackPanel>

                    <!-- Keyboard -->
                    <StackPanel 
                        x:Name="keyboardConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <Border 
                            Style="{StaticResource CxConfigBorderStyle}"
                            Visibility="{Binding BacklightControl, Converter={StaticResource VisibilityConverter}}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    VerticalAlignment="Center"
                                    Text="{Binding TextResources[Config.Keyboard.BacklightTimeout], Mode=OneTime}"/>
                                <ComboBox 
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    SelectedItem="{Binding KeyboardBacklightTimeout, Mode=TwoWay}"
                                    ItemsSource="{Binding Timeouts}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate x:DataType="x:Int32">
                                            <TextBlock Text="{Binding Converter={StaticResource TimeConverter}, Mode=OneTime}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                        </Border>

                        <Border
                            Style="{StaticResource CxConfigBorderStyle}"
                            Visibility="{Binding BacklightControl, Converter={StaticResource VisibilityConverter}}">

                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.Keyboard.BacklightWithDisplay], Mode=OneTime}"
                                IsOn="{Binding KeyboardBacklightWithDisplay, Mode=TwoWay}" />
                        </Border>

                        <TextBlock 
                            Text="{Binding TextResources[Config.Keyboard.HotKeys], Mode=OneTime}"
                            FontWeight="SemiBold"
                            Margin="10,30,0,5"/>

                        <Button
                            Grid.Column="2"
                            Margin="20,0,10,5"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Right"
                            Content="{Binding TextResources[Config.Keyboard.Reset], Mode=OneTime}"
                            Style="{StaticResource AccentButtonStyle}">

                            <Button.Flyout>
                                <Flyout x:Name="resetHotkeysFlyout" Placement="Bottom">
                                    <StackPanel MinWidth="200" MaxWidth="300">
                                        <TextBlock
                                            Style="{ThemeResource BaseTextBlockStyle}"
                                            Text="{Binding TextResources[Config.Keyboard.ResetConfirmation], Mode=OneTime}"/>
                                        <Button 
                                            Style="{StaticResource AccentButtonStyle}"
                                            HorizontalAlignment="Right" 
                                            Click="ResetHotkeys"
                                            Content="{Binding TextResources[Config.Keyboard.Reset], Mode=OneTime}" Margin="0,10,0,0"/>
                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>

                        </Button>

                        <ItemsControl ItemsSource="{Binding HotKeys}" Background="Transparent">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="local:KeyboardHotKeyViewModel">
                                    <Border Style="{StaticResource CxConfigBorderStyle}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="150"/>
                                                <ColumnDefinition Width="125"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>

                                            <Border 
                                                BorderBrush="{ThemeResource ControlStrokeColorSecondaryBrush}"
                                                BorderThickness="1"
                                                Background="{ThemeResource SubtleFillColorSecondaryBrush}"
                                                HorizontalAlignment="Left"
                                                CornerRadius="{ThemeResource ControlCornerRadius}"
                                                Margin="-10, 0, 0, 0"
                                                Padding="8,2">

                                                <TextBlock VerticalAlignment="Center" Text="{Binding Text}"/>
                                            </Border>

                                            <ComboBox 
                                                Grid.Column="1"
                                                Grid.ColumnSpan="2"
                                                HorizontalAlignment="Stretch"
                                                SelectedItem="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                ItemsSource="{Binding Commands}">

                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate x:DataType="commands:CommandBase">
                                                        <TextBlock 
                                                            VerticalAlignment="Center" 
                                                            Text="{Binding Description}"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                            <TextBlock 
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Right"
                                                Margin="0,10,10,0"
                                                Grid.Column="1"
                                                Grid.Row="1" 
                                                Visibility="{Binding ParametersVisibility, Mode=OneWay}" 
                                                Text="{Binding TextResources[Config.Keyboard.HotKeyAction], Mode=OneTime}"/>

                                            <ComboBox 
                                                HorizontalAlignment="Stretch"
                                                Visibility="{Binding ParametersVisibility, Mode=OneWay}" 
                                                Grid.Row="1" 
                                                Grid.Column="2"
                                                Margin="0,10,0,0"
                                                SelectedItem="{Binding ParameterInfo, Mode=TwoWay}"
                                                ItemsSource="{Binding Command.Parameters, Mode=OneWay}">

                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate x:DataType="commands:CommandParameterInfo">
                                                        <TextBlock VerticalAlignment="Center" Text="{Binding Description}"/>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- Monitoring -->
                    <StackPanel 
                        x:Name="monitoringConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding ShowBatteryChargeRate, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Hardware.AC], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding TextResources[Config.Monitoring.ShowBatteryChargeRate], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>

                        <Border 
                            Visibility="{Binding IsCpuTemperatureVisible, Converter={StaticResource VisibilityConverter}}"
                            Style="{StaticResource CxConfigBorderStyle}">

                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding ShowCpuTemperature, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Common.Temperature], Mode=OneTime}"/>

                                        <TextBlock Text="{Binding TextResources[Config.Monitoring.ShowCpuTemperature], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>

                        <Border 
                            Visibility="{Binding IsFanSpeedVisible, Converter={StaticResource VisibilityConverter}}"
                            Style="{StaticResource CxConfigBorderStyle}">

                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding ShowFanSpeed, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding ImageResources[Common.Diagnostic], Mode=OneTime}"/>

                                        <TextBlock Text="{Binding TextResources[Config.Monitoring.ShowFanSpeed], Mode=OneTime}"/>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                    </StackPanel>

                    <!-- Performance -->
                    <StackPanel
                        x:Name="performanceConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <Grid 
                            Margin="10,5"
                            HorizontalAlignment="Right"
                            Visibility="{Binding Profiles.Count, Converter={StaticResource VisibilityConverter}}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ComboBox 
                                ItemsSource="{Binding Profiles, Mode=OneWay}"
                                SelectedItem="{Binding CurrentProfile, Mode=TwoWay}"
                                DisplayMemberPath="Name"
                                HorizontalAlignment="Stretch"  
                                VerticalAlignment="Center"/>

                            <Button 
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                ToolTipService.ToolTip="{Binding TextResources[Config.Performance.NewProfileToolTip], Mode=OneTime}">

                                <FontIcon FontSize="18" Glyph="&#xE710;" Margin="0"/>
                                <Button.Flyout>
                                    <Flyout x:Name="createProfileFlyout">
                                        <StackPanel MinWidth="250">
                                            <TextBox
                                                x:Name="createProfileName"
                                                PlaceholderText="{Binding TextResources[Config.Performance.NewProfileNamePlaceholder], Mode=OneTime}"/>
                                            <Button 
                                                IsEnabled="{Binding ElementName=createProfileName, Path=Text, Converter={StaticResource BooleanConverter}, ConverterParameter='!'}"
                                                Style="{StaticResource AccentButtonStyle}"
                                                HorizontalAlignment="Right" 
                                                Click="CreateProfile"
                                                Content="{Binding TextResources[Config.Performance.CreateProfile], Mode=OneTime}" Margin="0,10,0,0"/>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <Button 
                                Visibility="{Binding IsUserProfile, Converter={StaticResource VisibilityConverter}}"                                
                                Grid.Column="2"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                ToolTipService.ToolTip="{Binding TextResources[Config.Performance.RenameProfileToolTip], Mode=OneTime}">

                                <FontIcon FontSize="18" Glyph="&#xE8AC;" Margin="0"/>
                                <Button.Flyout>
                                    <Flyout x:Name="renameProfileFlyout" Opened="renameProfileFlyout_Opened">
                                        <StackPanel MinWidth="250">
                                            <TextBox
                                                x:Name="renameProfileName"
                                                PlaceholderText="{Binding TextResources[Config.Performance.NewProfileNamePlaceholder], Mode=OneTime}"/>
                                            <Button 
                                                IsEnabled="{Binding ElementName=renameProfileName, Path=Text, Converter={StaticResource BooleanConverter}, ConverterParameter='!'}"
                                                Style="{StaticResource AccentButtonStyle}"
                                                HorizontalAlignment="Right" 
                                                Click="RenameProfile"
                                                Content="{Binding TextResources[Config.Performance.RenameProfile], Mode=OneTime}" Margin="0,10,0,0"/>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <Button 
                                Visibility="{Binding IsUserProfile, Converter={StaticResource VisibilityConverter}}"
                                Grid.Column="3"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                ToolTipService.ToolTip="{Binding TextResources[Config.Performance.RemoveProfileToolTip], Mode=OneTime}">

                                <FontIcon FontSize="18" Glyph="&#xE74D;" Margin="0" />
                                <Button.Flyout>
                                    <Flyout x:Name="removeProfileFlyout">
                                        <StackPanel MinWidth="250">
                                            <TextBlock 
                                                FontWeight="SemiBold"
                                                Text="{Binding TextResources[Config.Performance.RemoveProfileConfirmation], Mode=OneTime}"/>
                                            <Button 
                                                Style="{StaticResource AccentButtonStyle}"
                                                HorizontalAlignment="Right" 
                                                Click="RemoveProfile"
                                                Content="{Binding TextResources[Config.Performance.RemoveProfile], Mode=OneTime}" Margin="0,10,0,0"/>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </Grid>

                        <Border 
                            Visibility="{Binding Profiles.Count, Converter={StaticResource VisibilityConverter}, ConverterParameter='!'}"                            
                            Style="{StaticResource CxConfigBorderStyle}">
                            <StackPanel Orientation="Vertical">
                                <TextBlock
                                    Text="{Binding TextResources[Config.Performance.NoProfileTitle], Mode=OneTime}"
                                    FontWeight="SemiBold"/>

                                <TextBlock
                                    Text="{Binding TextResources[Config.Performance.NoProfileMessage], Mode=OneTime}"
                                    FontWeight="Normal"
                                    Margin="0,10,0,0"/>

                                <StackPanel 
                                    Orientation="Horizontal"
                                    Margin="0,20,0,0">

                                    <TextBox
                                        x:Name="newProfileName"
                                        Width="250"
                                        VerticalAlignment="Center"
                                        PlaceholderText="{Binding TextResources[Config.Performance.NewProfileNamePlaceholder], Mode=OneTime}"/>
                                    <Button 
                                        IsEnabled="{Binding ElementName=newProfileName, Path=Text, Converter={StaticResource BooleanConverter}, ConverterParameter='!'}"
                                        Style="{StaticResource AccentButtonStyle}"
                                        HorizontalAlignment="Right" 
                                        VerticalAlignment="Center"
                                        Command="{Binding CreateProfileCommand}"
                                        CommandParameter="{Binding ElementName=newProfileName, Path=Text}"
                                        Content="{Binding TextResources[Config.Performance.CreateProfile], Mode=OneTime}" Margin="10,0,0,0"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>

                        <Border 
                            Style="{StaticResource CxConfigBorderStyle}"
                            Visibility="{Binding CurrentProfile, Converter={StaticResource VisibilityConverter}}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock VerticalAlignment="Center" Text= "{Binding TextResources[Config.Performance.BasePerformanceMode], Mode=OneTime}"/>

                                <ComboBox 
                                    Grid.Column="1"
                                    ItemsSource="{Binding PerformanceModes, Mode=OneWay}"
                                    SelectedItem="{Binding PerformanceMode, Mode=TwoWay}"
                                    HorizontalAlignment="Stretch"  
                                    VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <TextBlock 
                            Visibility="{Binding IsCpuPowerLimitVisible, Converter={StaticResource VisibilityConverter}}"
                            Text="{Binding TextResources[Config.Performance.PowerLimits], Mode=OneTime}"
                            FontWeight="SemiBold"
                            Margin="10,30,0,5"/>

                        <Border 
                            Visibility="{Binding IsCpuPowerLimitVisible, Converter={StaticResource VisibilityConverter}}"                            
                            Style="{StaticResource CxConfigBorderStyle}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding TextResources[Config.Performance.Cpu], Mode=OneTime}"/>
                                    <Run Text="{Binding CpuLimit, Mode=OneWay}"/>
                                    <Run Text="W"/>
                                </TextBlock>

                                <Slider 
                                    Grid.Column="1" 
                                    Minimum="{Binding MinPowerLimit}"
                                    Maximum="{Binding MaxPowerLimit}"
                                    Value="{Binding CpuLimit, Mode=TwoWay}"/>
                            </Grid>
                        </Border>

                        <TextBlock 
                            Visibility="{Binding CurrentProfile, Converter={StaticResource VisibilityConverter}}"
                            Text="{Binding TextResources[Config.Performance.FanCurves], Mode=OneTime}"
                            FontWeight="SemiBold"
                            Margin="10,30,0,5"/>

                        <Border 
                            Style="{StaticResource CxConfigBorderStyle}"
                            Visibility="{Binding CurrentProfile, Converter={StaticResource VisibilityConverter}}">
                            
                            <ToggleSwitch HorizontalAlignment="Stretch" IsOn="{Binding UseCustomFanCurves, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <TextBlock Text="{Binding TextResources[Config.Performance.UseCustomFanCurves], Mode=OneTime}"/>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>

                        <StackPanel
                            Orientation="Vertical"
                            Visibility="{Binding UseCustomFanCurves, Converter={StaticResource VisibilityConverter}}">

                            <InfoBar
                                Margin="10, 5"
                                IsClosable="false"
                                IsOpen="{Binding IsFanCurvesWarningVisible}"
                                BorderBrush="{ThemeResource ControlElevationBorderBrush}"
                                Background="{ThemeResource ControlFillColorDefaultBrush}"
                                Severity="Informational"
                                Title=""
                                Message="{Binding TextResources[Config.Performance.FanCurveWarningMessage], Mode=OneTime}">

                                <InfoBar.ActionButton>
                                    <HyperlinkButton NavigateUri="{Binding CustomFanCurvesPageUrl}" Content="{Binding TextResources[Config.Performance.FanCurveWarningMore], Mode=OneTime}"/>
                                </InfoBar.ActionButton>
                            </InfoBar>

                            <Border 
                                Visibility="{Binding CurrentProfile, Converter={StaticResource VisibilityConverter}}"
                                Style="{StaticResource CxConfigBorderStyle}">

                                <controls:FanCurveTuner
                                    x:Name="cpuCurveTuner"
                                    IsEnabled="{Binding IsUserData, Mode=OneWay}"
                                    DataContext="{Binding Cpu, Mode=OneTime}"
                                    Height="200"/>
                            </Border>

                            <Border 
                                Visibility="{Binding CurrentProfile, Converter={StaticResource VisibilityConverter}}"
                                Style="{StaticResource CxConfigBorderStyle}">

                                <controls:FanCurveTuner 
                                    x:Name="gpuCurveTuner"
                                    IsEnabled="{Binding IsUserData, Mode=OneWay}"
                                    DataContext="{Binding Gpu, Mode=OneTime}"
                                    Height="200"/>
                            </Border>
                        </StackPanel>

                    </StackPanel>

                    <!-- Tablet -->
                    <StackPanel 
                        x:Name="tabletConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.Tablet.DisableTouchPadInTabletMode], Mode=OneTime}"
                                IsOn="{Binding DisableTouchPadInTabletMode, Mode=TwoWay}" />
                        </Border>

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock VerticalAlignment="Center" Text= "{Binding TextResources[Config.Tablet.Profile], Mode=OneTime}"/>

                                <ComboBox 
                                    Grid.Column="1"
                                    ItemsSource="{Binding Profiles, Mode=OneWay}"
                                    SelectedItem="{Binding TabletProfile, Mode=TwoWay}"
                                    DisplayMemberPath="Name"
                                    HorizontalAlignment="Stretch"  
                                    VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <Border
                            Style="{StaticResource CxConfigBorderStyle}"
                            Visibility="{Binding ControlDisplayRefreshRate, Converter={StaticResource VisibilityConverter}}">
                            
                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.Tablet.TabletWithHighDisplayRefreshRate], Mode=OneTime}"
                                IsOn="{Binding TabletWithHighDisplayRefreshRate, Mode=TwoWay}" />
                        </Border>
                    </StackPanel>

                    <!-- Battery -->
                    <StackPanel
                        x:Name="batteryConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Border 
                                    Margin="-20,0,-10,0" 
                                    BorderThickness="0,0,0,1" 
                                    BorderBrush="{ThemeResource ControlElevationBorderBrush}">

                                    <StackPanel Orientation="Horizontal" Margin="10, 0, 10, 10">
                                        <FontIcon 
                                            Margin="5,0,5,0"
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Glyph="{Binding StatusImage}"/>
                                        <TextBlock 
                                            FontSize="21" 
                                            FontWeight="SemiBold"
                                            VerticalAlignment="Center" >
                                        
                                            <Run Text="{Binding Percentage}"/>
                                            <Run Text="%"/>
                                        </TextBlock>

                                        <TextBlock 
                                            Margin="15,0,0,0"
                                            VerticalAlignment="Center"
                                            Text="{Binding PowerState}"/>

                                        <TextBlock
                                            Margin="15,0,0,0"
                                            VerticalAlignment="Center"                                            
                                            Visibility="{Binding Rate, Converter={StaticResource VisibilityConverter}}">
                                        
                                            <Run Text="{Binding Rate}" FontWeight="SemiBold"/>
                                            <Run Text="mW"/>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>

                                <Grid Grid.Row="1" Margin="0, 10, 0, 5">
                                    <Grid.Resources>
                                        <Style x:Key="Header" TargetType="TextBlock">
                                            <Setter Property="Margin" Value="0, 0, 40, 5"/>
                                        </Style>

                                        <Style x:Key="Value" TargetType="TextBlock">
                                            <Setter Property="Margin" Value="10, 0, 10, 5"/>
                                            <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}"/>
                                        </Style>
                                    </Grid.Resources>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Style="{StaticResource Header}" Text="{Binding TextResources[Config.Battery.Name], Mode=OneTime}"/>
                                    <TextBlock Grid.Row="0" Style="{StaticResource Value}" Grid.Column="1" Text="{Binding Name}"/>

                                    <TextBlock Grid.Row="1" Style="{StaticResource Header}" Text="{Binding TextResources[Config.Battery.ManufactureName], Mode=OneTime}"/>
                                    <TextBlock Grid.Row="1" Style="{StaticResource Value}" Grid.Column="1" Text="{Binding ManufactureName}"/>

                                    <TextBlock Grid.Row="2" Style="{StaticResource Header}" Text="{Binding TextResources[Config.Battery.EstimatedTime], Mode=OneTime}"/>
                                    <TextBlock Grid.Row="2" Style="{StaticResource Value}" Grid.Column="1" Text="{Binding EstimatedTime}"/>

                                    <TextBlock Grid.Row="3" Style="{StaticResource Header}" Text="{Binding TextResources[Config.Battery.Capacity], Mode=OneTime}"/>
                                    <TextBlock Grid.Row="3" Style="{StaticResource Value}" Grid.Column="1">
                                        <Run Text="{Binding Capacity}" FontWeight="SemiBold"/>
                                        <Run Text="mWh"/>
                                    </TextBlock>

                                    <TextBlock Grid.Row="4" Style="{StaticResource Header}" Text="{Binding TextResources[Config.Battery.FullChargedCapacity], Mode=OneTime}"/>
                                    <TextBlock Grid.Row="4" Style="{StaticResource Value}" Grid.Column="1">
                                        <Run Text="{Binding FullChargedCapacity}" FontWeight="SemiBold"/>
                                        <Run Text="mWh"/>
                                    </TextBlock>

                                    <TextBlock Grid.Row="5" Style="{StaticResource Header}" Text="{Binding TextResources[Config.Battery.DesignedCapacity], Mode=OneTime}"/>
                                    <TextBlock Grid.Row="5" Style="{StaticResource Value}" Grid.Column="1">
                                        <Run Text="{Binding DesignedCapacity}" FontWeight="SemiBold"/>
                                        <Run Text="mWh"/>
                                    </TextBlock>

                                    <TextBlock Grid.Row="6" Style="{StaticResource Header}" Text="{Binding TextResources[Config.Battery.WearPercentage], Mode=OneTime}"/>
                                    <TextBlock Grid.Row="6" Style="{StaticResource Value}" Grid.Column="1">
                                        <Run Text="{Binding WearPercentage}" FontWeight="SemiBold"/>
                                        <Run Text="%"/>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Border>

                        <Border 
                            Visibility="{Binding IsBatteryChargeLimitVisible, Converter={StaticResource VisibilityConverter}}"
                            Style="{StaticResource CxConfigBorderStyle}">

                            <ToggleSwitch 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center"
                                IsOn="{Binding UseBatteryChargeLimit, Mode=TwoWay}">
                                <ToggleSwitch.Header>
                                    <StackPanel>
                                        <TextBlock Text="{Binding TextResources[Config.Battery.BatteryChargeLimit], Mode=OneTime}" Style="{ThemeResource BodyStrongTextBlockStyle}"/>
                                        <TextBlock Style="{ThemeResource CaptionTextBlockStyle}">
                                            <Run Text="{Binding TextResources[Config.Battery.BatteryChargeLimitDescription], Mode=OneTime}"/>
                                            <Run Text="{Binding BatteryChargeLimit}" FontWeight="SemiBold"/>
                                            <Run Text="%"/>
                                        </TextBlock>
                                    </StackPanel>
                                </ToggleSwitch.Header>
                            </ToggleSwitch>
                        </Border>
                    </StackPanel>

                    <!-- About -->
                    <StackPanel 
                        x:Name="aboutConfig"
                        Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}">

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.Resources>
                                    <Style x:Key="Header" TargetType="TextBlock">
                                        <Setter Property="Margin" Value="0, 0, 40, 5"/>
                                    </Style>

                                    <Style x:Key="Value" TargetType="TextBlock">
                                        <Setter Property="Margin" Value="10, 0, 20, 5"/>
                                        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}"/>
                                    </Style>
                                </Grid.Resources>

                                <Border 
                                    Margin="-20,0,-10,0" 
                                    BorderThickness="0,0,0,1" 
                                    Grid.ColumnSpan="2"
                                    BorderBrush="{ThemeResource ControlElevationBorderBrush}">
                                    <TextBlock 
                                        Text="{Binding ProductName}"
                                        FontWeight="SemiBold"
                                        FontSize="20"
                                        Margin="20,0,0,10" />
                                </Border>

                                <TextBlock 
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2" 
                                    Text="{Binding Comments}"
                                    Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                    TextWrapping="Wrap"
                                    Margin="0,10,0,20" />

                                <TextBlock Grid.Row="2" Text="{Binding TextResources[Config.About.Version], Mode=OneTime}" Style="{StaticResource Header}"/>
                                <TextBlock Grid.Row="3" Text="{Binding TextResources[Config.About.Runtime], Mode=OneTime}" Style="{StaticResource Header}"/>
                                <TextBlock Grid.Row="4" Text="{Binding TextResources[Config.About.Device], Mode=OneTime}" Style="{StaticResource Header}"/>

                                <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ProductVersion}" Style="{StaticResource Value}"/>
                                <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Runtime}" Style="{StaticResource Value}"/>
                                <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding ModelName}" Style="{StaticResource Value}"/>

                                <StackPanel
                                    Grid.Row="5"
                                    Margin="-13,0,0,0"
                                    Orientation="Horizontal">

                                    <HyperlinkButton                                        
                                        NavigateUri="{Binding HomePageUrl}" Content="{Binding TextResources[Config.About.HomePage], Mode=OneTime}"/>

                                    <HyperlinkButton
                                        NavigateUri="{Binding LicenseUrl}" Content="{Binding TextResources[Config.About.License], Mode=OneTime}"/>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <TextBlock 
                            Visibility="{Binding IsCpuPowerLimitVisible, Converter={StaticResource VisibilityConverter}}"
                            Text="{Binding TextResources[Config.About.Update], Mode=OneTime}"
                            FontWeight="SemiBold"
                            Margin="10,30,0,5"/>

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Grid VerticalAlignment="Top" Margin="0,5,0,0">
                                    <FontIcon 
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        Margin="0,0,0,0"                                    
                                        Glyph="{Binding ImageResources[Common.Updater], Mode=OneTime}"/>

                                    <FontIcon 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='Updated', Converter={StaticResource VisibilityConverter}}"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        Margin="0,0,-5,-5"
                                        Foreground="Green"
                                        Glyph="&#xF83F;"/>

                                    <FontIcon 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='Updated', Converter={StaticResource VisibilityConverter}}"                                       
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        Margin="0,0,-5,-5"
                                        Foreground="White" 
                                        Glyph="&#xF1D8;"/>
                                </Grid>

                                <StackPanel 
                                    Grid.Column="1"
                                    Margin="25,0,0,0"
                                    VerticalAlignment="Center"
                                    Orientation="Vertical">

                                    <TextBlock 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='None', Converter={StaticResource VisibilityConverter}}"                                                                                
                                        Text="{Binding TextResources[Update.CheckForUpdate], Mode=OneTime}"/>

                                    <TextBlock 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='Checking', Converter={StaticResource VisibilityConverter}}"                                                                                
                                        Text="{Binding TextResources[Update.CheckingForUpdate], Mode=OneTime}"/>

                                    <TextBlock 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='Updated', Converter={StaticResource VisibilityConverter}}"
                                        Text="{Binding TextResources[Update.Updated], Mode=OneTime}"/>

                                    <TextBlock 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='ReadyToDownload', Converter={StaticResource VisibilityConverter}}"
                                        Text="{Binding TextResources[Update.NewVersion], Mode=OneTime}"/>

                                    <TextBlock 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='Downloading', Converter={StaticResource VisibilityConverter}}"                                                                                
                                        Text="{Binding TextResources[Update.Downloading], Mode=OneTime}"/>

                                    <TextBlock 
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='ReadyToInstall', Converter={StaticResource VisibilityConverter}}"                                                                                
                                        Text="{Binding TextResources[Update.ReadyToInstall], Mode=OneTime}"/>

                                    <HyperlinkButton
                                        Margin="-11,5,0,0"
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='ReadyToDownload', Converter={StaticResource VisibilityConverter}}"                                        
                                        NavigateUri="{Binding UpdateCommand.ReleaseNotesUrl}"
                                        Content="{Binding TextResources[Update.ViewReleaseNotes], Mode=OneTime}"/>

                                    <ProgressBar
                                        Margin="0,10"
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='Checking', Converter={StaticResource VisibilityConverter}}"                                                                                
                                        IsIndeterminate="True"/>

                                    <ProgressBar
                                        Margin="0,10"
                                        Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='Downloading', Converter={StaticResource VisibilityConverter}}"                                                                                
                                        Value="{Binding UpdateCommand.Progress}"                                    
                                        IsIndeterminate="False"/>

                                </StackPanel>

                                <Button
                                    Grid.Column="2"
                                    Margin="20,0,0,0"
                                    VerticalAlignment="Top"
                                    Style="{StaticResource AccentButtonStyle}"
                                    IsEnabled="{Binding UpdateCommand.Enabled}"
                                    Command="{Binding UpdateCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon 
                                            Visibility="{Binding UpdateCommand.UpdateState, ConverterParameter='ReadyToInstall', Converter={StaticResource VisibilityConverter}}"                                       
                                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                            Margin="0,0,10,0"
                                            Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}" 
                                            Glyph="{Binding ImageResources[Common.Shield], Mode=OneTime}"/>
                                        <TextBlock Text="{Binding UpdateCommand.Text}"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Border>

                        <Border Style="{StaticResource CxConfigBorderStyle}">
                            <ToggleSwitch 
                                HorizontalAlignment="Stretch"
                                Header="{Binding TextResources[Config.About.CheckForUpdates], Mode=OneTime}"
                                IsOn="{Binding CheckForUpdates, Mode=TwoWay}" />
                        </Border>

                        <TextBlock 
                            Text="{Binding Copyright}"
                            Margin="10,30,0,5"/>
                    </StackPanel>
                </Grid>
            </ScrollViewer>
        </NavigationView>
    </Grid>
</Window>
